{config, pkgs, ...}:
let
  PKG_CONFIG_PATH_cache = "${config.users.users.instable.home}/.PKG_CONFIG_PATH-cache.txt";
  
  search_pkg_config-nu = /* nu */
  ''
    ${pkgs.fd}/bin/fd --base-directory "/nix/store/" -j 8 --extension pc | 
      lines |
      each {|line| $line | path dirname} |
      where {|it| $it | str ends-with "lib/pkgconfig"} |
      uniq |
      sort |
      each {|path| $"/nix/store/($path)"} |
      str join ":"
  '';

  # This derivation runs the nushell script at build time and stores its output in a file.
  # The content of this file will be the colon-separated pkg-config paths.
  pkgConfigPathFile = pkgs.runCommand "pkg-config-paths-file" {
    # Programs needed by the script below.
    # pkgs.nushell is used to execute the script.
    # pkgs.fd is called by the script.
    nativeBuildInputs = [ pkgs.nushell pkgs.fd ];
  } ''
    # Execute the nushell script and redirect its standard output to the $out file.
    # $out is a special variable in pkgs.runCommand that points to the output path of this derivation.
    ${pkgs.nushell}/bin/nu -c '${search_pkg_config-nu}' > $out
  '';

  # Read the content of the file generated by the pkgConfigPathFile derivation.
  # This value is computed at build time and will be a string.
  pkgConfigPathValue = builtins.readFile pkgConfigPathFile;

  # Optional: A simple activation script for logging that changes have been applied.
  activation_script = /* zsh */
  ''
    printf "\n\033[1;33m⟩ PKG_CONFIG_PATH environment variable and /etc/pkg_config_cache file configured by Nix.\n\033[0m" >&2
    printf "   The value is derived from pkg-config files in the Nix store and stored in /etc/pkg_config_cache.\n" >&2

    # printf "   saving the value to ${PKG_CONFIG_PATH_cache}.\n" >&2
    # echo '${pkgConfigPathValue}' > ${PKG_CONFIG_PATH_cache}
  '';



in
{
    # https://www.reddit.com/r/Nix/comments/1i3h4zh/comment/m7wfhj7
    # https://github.com/LnL7/nix-darwin/blob/master/modules/system/activation-scripts.nix#L121-L128 
    # list of script names that can be executed by the user :
    #     - extraActivation
    #     - preActivation
    #     - postActivation
    #     - extraUserActivation
    #     - preUserActivation
    #     - postUserActivation
      
    # ❌ system.activationScripts.pkg_config_paths.text = create_pkg_config_path_zsh_script;
    # ✅ system.activationScripts.postActivation.text = 

  environment.variables.PKG_CONFIG_PATH = pkgConfigPathValue;
  environment.etc."pkg_config_cache".text = pkgConfigPathValue;
  system.activationScripts.pkgConfigPath.text = activation_script;
}
